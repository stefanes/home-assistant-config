light:
  - platform: group
    name: Tibber price warning lights
    unique_id: tibber_price_warning_lights
    entities:
      - light.price_warning_light_1
      - ...

template:
  - binary_sensor:
      - name: Tibber price above average
        state: >
          {{ states('sensor.electricity_price_tibber') | float > state_attr('sensor.electricity_price_tibber', 'avg_price') | float }}
        device_class: power
        unique_id: tibber_price_above_average
        availability: >
          {{ states('sensor.electricity_price_tibber') | is_number
            and state_attr('sensor.electricity_price_tibber', 'avg_price') | is_number }}
        attributes:
          electricity_price_tibber: "{{ states('sensor.electricity_price_tibber') }}"
          electricity_price_tibber_avg: "{{ state_attr('sensor.electricity_price_tibber', 'avg_price') }}"

      - name: Tibber unavailable
        state: >
          {{ now() - states.sensor.power_tibber.last_updated > timedelta(minutes=5)
            or now() - states.sensor.electricity_price_tibber.last_updated > timedelta(hours=1,minutes=5) }}
        delay_on: 0:02:00 # turn on if problem persists for 2 minutes
        device_class: problem
        unique_id: tibber_unavailable

  - sensor:
      - name: Electricity price Tibber (cents)
        state: >
          {{ ((states('sensor.electricity_price_tibber') | float) * 100) | round(0) }}
        unit_of_measurement: Öre/kWh
        state_class: total
        device_class: monetary
        unique_id: electricity_price_tibber_cents
        # icon: mdi:currency-usd
        availability: >
          {{ states('sensor.electricity_price_tibber') | is_number }}
        attributes:
          electricity_price_tibber: "{{ states('sensor.electricity_price_tibber') }}"
          avg_price: "{{ ((state_attr('sensor.electricity_price_tibber', 'avg_price') | float) * 100) | round(0) }}"
          price_percent_to_average: >
            {% set price = ((states('sensor.electricity_price_tibber') | float) * 100) | round(0) %}
            {% set avg_price = ((state_attr('sensor.electricity_price_tibber', 'avg_price') | float) * 100) | round(0) %}
            {{ ((price / avg_price | float) * 100) | round(0) }}

sensor:
  - platform: nordpool
    VAT: true
    currency: SEK
    price_in_cents: true
    region: SE4
    precision: 3
    price_type: kWh
    # convert from Öre to SEK and apply VAT
    additional_costs: >
      {{ states('input_number.tibber_additional_cost') | float(0) * 0.01 * 1.25 }}

input_number:
  tibber_additional_cost:
    name: Tibber additional cost
    min: 0.0
    max: 100.0
    step: 0.01
    mode: box
    unit_of_measurement: Öre/kWh
    icon: mdi:cash-multiple

automation:
  - id: tibber_price_above_average
    alias: Tibber price above average
    description: ""
    trigger:
      - platform: homeassistant
        event: start
        id: homeassistant_start
      - platform: state
        entity_id:
          - binary_sensor.tibber_price_above_average
        to:
          - "on"
          - "off"
    action:
      - if:
          - condition: trigger
            id:
              - homeassistant_start
        then:
          - delay:
              minutes: 5
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.tibber_price_above_average
                state: "on"
            sequence:
              - service: light.turn_on
                data:
                  brightness: 255
                  color_name: red
                target:
                  entity_id:
                    - light.tibber_price_warning_lights
          - conditions:
              - condition: state
                entity_id: binary_sensor.tibber_price_above_average
                state: "off"
            sequence:
              - service: light.turn_on
                data:
                  brightness: 255
                  color_name: green
                target:
                  entity_id:
                    - light.tibber_price_warning_lights
    mode: single

  - id: tibber_watchdog
    alias: Tibber watchdog
    description: ""
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.tibber_unavailable
        to: "on"
        from: "off"
    action:
      - service: script.notify_mobile
        data:
          title: Tibber unavailable
          message: Problem detected with Tibber (for more than 120 seconds)
          icon: mdi:flash-alert
          target: /config/devices/device/826696b0496045db9f55873426cd8478  # <-- change this to the correct Tibber device Id
          group: tibber-watchdog
          category: Watchdog
          category_importance: low
        enabled: true
      - repeat:
          until:
            - condition: state
              entity_id: binary_sensor.hallway_lights_problem
              state: "off"
          sequence:
            - service: homeassistant.reload_config_entry
              target:
                device_id: 826696b0496045db9f55873426cd8478
            - delay:
                minutes: 5
      - service: script.notify_mobile
        data:
          title: Tibber available again
          message: Problem with Tibber resolved
          icon: mdi:flash-alert-outline
          target: /config/devices/device/826696b0496045db9f55873426cd8478
          group: tibber-watchdog
          category: Watchdog
          category_importance: low
        enabled: true
    mode: restart
    trace:
      stored_traces: 20
